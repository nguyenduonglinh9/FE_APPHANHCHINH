{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport React, { useState, useEffect } from \"react\";\nimport { Feather, FontAwesome, AntDesign, MaterialIcons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { GoogleSignin, GoogleSigninButton, statusCodes } from \"@react-native-google-signin/google-signin\";\nvar randomColor = require(\"randomcolor\");\nimport { CommonActions } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ListRoomScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    accessToken = _route$params.accessToken,\n    userID = _route$params.userID,\n    key = _route$params.key,\n    floor = _route$params.floor;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    rooms = _useState2[0],\n    setRooms = _useState2[1];\n  useEffect(function () {\n    fetch(\"https://ndl-be-apphanhchinh.onrender.com/room\", {\n      headers: {\n        access_token: accessToken\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setRooms(data);\n    });\n  }, []);\n  var renderListRoom = function renderListRoom() {\n    return rooms.filter(function (item, index) {\n      return item.name.indexOf(key) != -1;\n    }).map(function (item, index) {\n      return _jsx(Pressable, {\n        onPress: function onPress() {\n          return navigation.navigate(\"DetailRoomScreen\", {\n            idRoom: item._id\n          });\n        },\n        style: item.isReady == true ? {\n          padding: 10,\n          margin: 10,\n          backgroundColor: \"#e9ecef\",\n          borderColor: \"#d2d4d7\",\n          borderWidth: 1,\n          borderRadius: 3\n        } : {\n          padding: 10,\n          margin: 10,\n          backgroundColor: \"#00ffab\",\n          borderColor: \"#00e59a\",\n          borderWidth: 1,\n          borderRadius: 3\n        },\n        children: _jsx(Text, {\n          children: item.name\n        })\n      }, item._id);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(MaterialIcons, {\n        onPress: function onPress() {\n          return navigation.dispatch(CommonActions.goBack());\n        },\n        name: \"keyboard-arrow-left\",\n        size: 24,\n        color: \"black\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 600\n        },\n        children: floor\n      }), _jsx(Feather, {\n        name: \"bell\",\n        size: 24,\n        color: \"black\"\n      })]\n    }), _jsx(View, {\n      style: styles.body,\n      children: rooms.length > 0 ? renderListRoom() : null\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#ffffff\",\n    paddingTop: 40,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingBottom: 20\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  body: {\n    marginTop: 20,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    columnGap: 5,\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Feather","FontAwesome","AntDesign","MaterialIcons","MaterialCommunityIcons","GoogleSignin","GoogleSigninButton","statusCodes","randomColor","require","CommonActions","jsx","_jsx","jsxs","_jsxs","ListRoomScreen","_ref","route","navigation","_route$params","params","accessToken","userID","key","floor","_useState","_useState2","_slicedToArray","rooms","setRooms","fetch","headers","access_token","then","res","json","data","renderListRoom","filter","item","index","name","indexOf","map","Pressable","onPress","navigate","idRoom","_id","style","isReady","padding","margin","backgroundColor","borderColor","borderWidth","borderRadius","children","Text","View","styles","container","header","dispatch","goBack","size","color","fontSize","fontWeight","body","length","StyleSheet","create","width","height","paddingTop","paddingLeft","paddingRight","paddingBottom","display","flexDirection","alignItems","justifyContent","marginTop","flexWrap","columnGap","flex"],"sources":["D:/COURSES/React Native/App-hanh-chinh-development/src/Components/Home/Screens/HomeScreens/ListBuild/ListRoomScreen.js"],"sourcesContent":["import {\r\n  Dimensions,\r\n  Text,\r\n  View,\r\n  Pressable,\r\n  Image,\r\n  StyleSheet,\r\n  FlatList,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Feather,\r\n  FontAwesome,\r\n  AntDesign,\r\n  MaterialIcons,\r\n  MaterialCommunityIcons,\r\n} from \"@expo/vector-icons\";\r\nimport {\r\n  GoogleSignin,\r\n  GoogleSigninButton,\r\n  statusCodes,\r\n} from \"@react-native-google-signin/google-signin\";\r\nvar randomColor = require(\"randomcolor\");\r\nimport { CommonActions } from \"@react-navigation/native\";\r\n\r\nexport default function ListRoomScreen({ route, navigation }) {\r\n  const { accessToken, userID, key, floor } = route.params;\r\n  const [rooms, setRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://ndl-be-apphanhchinh.onrender.com/room\", {\r\n      headers: {\r\n        access_token: accessToken,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setRooms(data);\r\n      });\r\n  }, []);\r\n\r\n  const renderListRoom = () => {\r\n    return rooms\r\n      .filter((item, index) => {\r\n        return item.name.indexOf(key) != -1;\r\n      })\r\n      .map((item, index) => {\r\n        return (\r\n          <Pressable\r\n            onPress={() =>\r\n              navigation.navigate(\"DetailRoomScreen\", { idRoom: item._id })\r\n            }\r\n            style={\r\n              item.isReady == true\r\n                ? {\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    backgroundColor: \"#e9ecef\",\r\n                    borderColor: \"#d2d4d7\",\r\n                    borderWidth: 1,\r\n                    borderRadius: 3,\r\n                  }\r\n                : {\r\n                    padding: 10,\r\n                    margin: 10,\r\n                    backgroundColor: \"#00ffab\",\r\n                    borderColor: \"#00e59a\",\r\n                    borderWidth: 1,\r\n                    borderRadius: 3,\r\n                  }\r\n            }\r\n            key={item._id}\r\n          >\r\n            <Text>{item.name}</Text>\r\n          </Pressable>\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <MaterialIcons\r\n          onPress={() => navigation.dispatch(CommonActions.goBack())}\r\n          name=\"keyboard-arrow-left\"\r\n          size={24}\r\n          color=\"black\"\r\n        />\r\n        <Text style={{ fontSize: 16, fontWeight: 600 }}>{floor}</Text>\r\n        <Feather name=\"bell\" size={24} color=\"black\" />\r\n      </View>\r\n      <View style={styles.body}>\r\n        {rooms.length > 0 ? renderListRoom() : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#ffffff\",\r\n    paddingTop: 40,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  body: {\r\n    marginTop: 20,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    columnGap: 5,\r\n    flex: 1,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}