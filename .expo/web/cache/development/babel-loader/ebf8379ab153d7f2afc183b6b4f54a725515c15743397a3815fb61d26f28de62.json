{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport React, { useState, useEffect } from \"react\";\nimport { Feather, FontAwesome, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport { GoogleSignin, GoogleSigninButton, statusCodes } from \"@react-native-google-signin/google-signin\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar randomColor = require(\"randomcolor\");\nexport default function ListBuildScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    accessToken = _route$params.accessToken,\n    userID = _route$params.userID;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    builds = _useState2[0],\n    setBuilds = _useState2[1];\n  useEffect(function () {\n    fetch(\"https://ndl-be-apphanhchinh.onrender.com/building\", {\n      headers: {\n        access_token: accessToken\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setBuilds(data);\n    });\n  }, []);\n  var renderBuildList = function renderBuildList() {\n    return builds.map(function (build, index) {\n      var color = \"\";\n      if (build.name == \"TÒA F\") {\n        color = \"#0d51a1\";\n      } else if (build.name == \"TÒA P\") {\n        color = \"#f27125\";\n      } else {\n        color = \"#4eb849\";\n      }\n      return _jsxs(Pressable, {\n        onPress: function onPress() {\n          return navigation.navigate(\"ListFloorScreen\", {\n            idBuild: build._id\n          });\n        },\n        style: {\n          backgroundColor: color,\n          paddingTop: 40,\n          paddingLeft: 20,\n          paddingRight: 20,\n          paddingBottom: 40,\n          borderRadius: 10,\n          marginTop: 10,\n          marginBottom: 10,\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [_jsxs(View, {\n          style: {\n            flex: 0.8\n          },\n          children: [_jsxs(View, {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: 5\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 20,\n                fontWeight: 600,\n                color: \"#ffffff\"\n              },\n              children: build.name\n            }), _jsxs(Text, {\n              style: {\n                fontSize: 14,\n                fontWeight: 500,\n                color: \"#ffffff\"\n              },\n              children: [build.floor.length, \" T\\u1EA7ng\"]\n            })]\n          }), _jsx(View, {\n            style: {\n              marginTop: 5\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 12,\n                fontWeight: 400,\n                color: \"#ffffff\"\n              },\n              children: build.description\n            })\n          })]\n        }), _jsx(View, {\n          style: {\n            flex: 0.2,\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: _jsx(MaterialIcons, {\n            name: \"keyboard-arrow-right\",\n            size: 24,\n            color: \"#ffffff\"\n          })\n        })]\n      }, index);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(MaterialIcons, {\n        name: \"keyboard-arrow-left\",\n        size: 24,\n        color: \"black\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 600\n        },\n        children: \"Ki\\u1EC3m tra t\\xEDnh s\\u1EB5n ph\\xF2ng h\\u1ECDc\"\n      }), _jsx(Feather, {\n        name: \"bell\",\n        size: 24,\n        color: \"black\"\n      })]\n    }), _jsx(View, {\n      style: styles.body,\n      children: builds.length > 0 ? renderBuildList() : null\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#ffffff\",\n    paddingTop: 40,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingBottom: 20\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  body: {\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Feather","FontAwesome","AntDesign","MaterialIcons","GoogleSignin","GoogleSigninButton","statusCodes","jsx","_jsx","jsxs","_jsxs","randomColor","require","ListBuildScreen","_ref","route","navigation","_route$params","params","accessToken","userID","_useState","_useState2","_slicedToArray","builds","setBuilds","fetch","headers","access_token","then","res","json","data","renderBuildList","map","build","index","color","name","Pressable","onPress","navigate","idBuild","_id","style","backgroundColor","paddingTop","paddingLeft","paddingRight","paddingBottom","borderRadius","marginTop","marginBottom","display","flexDirection","children","View","flex","justifyContent","alignItems","Text","fontSize","fontWeight","floor","length","description","size","styles","container","header","body","StyleSheet","create","width","height"],"sources":["D:/COURSES/React Native/App-hanh-chinh-development/src/Components/Home/Screens/HomeScreens/ListBuild/ListBuildScreen.js"],"sourcesContent":["import {\r\n  Dimensions,\r\n  Text,\r\n  View,\r\n  Pressable,\r\n  Image,\r\n  StyleSheet,\r\n  FlatList,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Feather,\r\n  FontAwesome,\r\n  AntDesign,\r\n  MaterialIcons,\r\n} from \"@expo/vector-icons\";\r\nimport {\r\n  GoogleSignin,\r\n  GoogleSigninButton,\r\n  statusCodes,\r\n} from \"@react-native-google-signin/google-signin\";\r\nvar randomColor = require(\"randomcolor\");\r\n\r\nexport default function ListBuildScreen({ route, navigation }) {\r\n  const { accessToken, userID } = route.params;\r\n  const [builds, setBuilds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://ndl-be-apphanhchinh.onrender.com/building\", {\r\n      headers: {\r\n        access_token: accessToken,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setBuilds(data));\r\n  }, []);\r\n\r\n  const renderBuildList = () => {\r\n    return builds.map((build, index) => {\r\n      let color = \"\";\r\n      if (build.name == \"TÒA F\") {\r\n        color = \"#0d51a1\";\r\n      } else if (build.name == \"TÒA P\") {\r\n        color = \"#f27125\";\r\n      } else {\r\n        color = \"#4eb849\";\r\n      }\r\n      return (\r\n        <Pressable\r\n          onPress={() =>\r\n            navigation.navigate(\"ListFloorScreen\", { idBuild: build._id })\r\n          }\r\n          key={index}\r\n          style={{\r\n            backgroundColor: color,\r\n            paddingTop: 40,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingBottom: 40,\r\n            borderRadius: 10,\r\n            marginTop: 10,\r\n            marginBottom: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <View style={{ flex: 0.8 }}>\r\n            <View\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                marginBottom: 5,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 20, fontWeight: 600, color: \"#ffffff\" }}>\r\n                {build.name}\r\n              </Text>\r\n              <Text style={{ fontSize: 14, fontWeight: 500, color: \"#ffffff\" }}>\r\n                {build.floor.length} Tầng\r\n              </Text>\r\n            </View>\r\n            <View style={{ marginTop: 5 }}>\r\n              <Text style={{ fontSize: 12, fontWeight: 400, color: \"#ffffff\" }}>\r\n                {build.description}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={{\r\n              flex: 0.2,\r\n\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <MaterialIcons\r\n              name=\"keyboard-arrow-right\"\r\n              size={24}\r\n              color=\"#ffffff\"\r\n            />\r\n          </View>\r\n        </Pressable>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <MaterialIcons name=\"keyboard-arrow-left\" size={24} color=\"black\" />\r\n        <Text style={{ fontSize: 16, fontWeight: 600 }}>\r\n          Kiểm tra tính sẵn phòng học\r\n        </Text>\r\n        <Feather name=\"bell\" size={24} color=\"black\" />\r\n      </View>\r\n      <View style={styles.body}>\r\n        {builds.length > 0 ? renderBuildList() : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#ffffff\",\r\n    paddingTop: 40,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  body: {\r\n    marginTop: 20,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}