{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport SettingScreen from \"./SettingScreen\";\nimport { GoogleSignin, GoogleSigninButton, statusCodes } from \"@react-native-google-signin/google-signin\";\nimport { useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function MainHomeScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation,\n    checkLogin = _ref.checkLogin;\n  var _route$params = route.params,\n    userID = _route$params.userID,\n    accessToken = _route$params.accessToken;\n  var MyTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      primary: \"rgb(45, 83, 129)\",\n      background: \"#2d5381\",\n      card: \"rgb(244, 245, 242)\"\n    })\n  });\n  GoogleSignin.configure({\n    scopes: [\"https://www.googleapis.com/auth/drive.readonly\"],\n    androidClientId: \"307189795157-ffu87084ubfoge5rvuooedl206hho8qk.apps.googleusercontent.com\",\n    iosClientId: \"307189795157-o2k4dt8m0fvfacgv69s9n3ra2i6nm4jt.apps.googleusercontent.com\"\n  });\n  return _jsx(NavigationContainer, {\n    theme: MyTheme,\n    independent: true,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.header\n      }), _jsx(Stack.Navigator, {\n        initialRouteName: \"history\",\n        children: _jsx(Stack.Screen, {\n          initialParams: {\n            userID: userID,\n            accessToken: accessToken,\n            checkLogin: checkLogin\n          },\n          options: {\n            headerShown: false\n          },\n          name: \"history\",\n          children: function children(props) {\n            return _jsx(SettingScreen, _objectSpread(_objectSpread({}, props), {}, {\n              checkLogin: checkLogin\n            }));\n          }\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n    backgroundColor: \"#f0f0f0\",\n    position: \"relative\"\n  },\n  header: {\n    backgroundColor: \"#2d5381\",\n    width: \"100%\",\n    height: \"40%\",\n    borderBottomRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    position: \"absolute\",\n    top: 0\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Dimensions","NavigationContainer","DefaultTheme","createNativeStackNavigator","SettingScreen","GoogleSignin","GoogleSigninButton","statusCodes","useEffect","jsx","_jsx","jsxs","_jsxs","Stack","MainHomeScreen","_ref","route","navigation","checkLogin","_route$params","params","userID","accessToken","MyTheme","_objectSpread","colors","primary","background","card","configure","scopes","androidClientId","iosClientId","theme","independent","children","style","styles","container","header","Navigator","initialRouteName","Screen","initialParams","options","headerShown","name","props","create","display","width","get","height","backgroundColor","position","borderBottomRightRadius","borderBottomLeftRadius","top"],"sources":["D:/COURSES/React Native/App-hanh-chinh-development/src/Components/Home/Screens/SettingScreen/MainScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport SettingScreen from \"./SettingScreen\";\r\nimport {\r\n  GoogleSignin,\r\n  GoogleSigninButton,\r\n  statusCodes,\r\n} from \"@react-native-google-signin/google-signin\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function MainHomeScreen({ route, navigation, checkLogin }) {\r\n  const { userID, accessToken } = route.params;\r\n  const MyTheme = {\r\n    ...DefaultTheme,\r\n    colors: {\r\n      ...DefaultTheme.colors,\r\n      primary: \"rgb(45, 83, 129)\",\r\n      background: \"#2d5381\",\r\n      card: \"rgb(244, 245, 242)\",\r\n    },\r\n  };\r\n  GoogleSignin.configure({\r\n    scopes: [\"https://www.googleapis.com/auth/drive.readonly\"],\r\n\r\n    androidClientId:\r\n      \"307189795157-ffu87084ubfoge5rvuooedl206hho8qk.apps.googleusercontent.com\",\r\n    iosClientId:\r\n      \"307189795157-o2k4dt8m0fvfacgv69s9n3ra2i6nm4jt.apps.googleusercontent.com\",\r\n  });\r\n\r\n  return (\r\n    <NavigationContainer theme={MyTheme} independent={true}>\r\n      <View style={styles.container}>\r\n        <View style={styles.header}></View>\r\n        <Stack.Navigator initialRouteName=\"history\">\r\n          <Stack.Screen\r\n            initialParams={{\r\n              userID: userID,\r\n              accessToken: accessToken,\r\n              checkLogin: checkLogin,\r\n            }}\r\n            options={{ headerShown: false }}\r\n            name=\"history\"\r\n          >\r\n            {(props) => (\r\n              <SettingScreen {...props} checkLogin={checkLogin}></SettingScreen>\r\n            )}\r\n          </Stack.Screen>\r\n        </Stack.Navigator>\r\n      </View>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height,\r\n    backgroundColor: \"#f0f0f0\",\r\n    position: \"relative\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#2d5381\",\r\n    width: \"100%\",\r\n    height: \"40%\",\r\n    borderBottomRightRadius: 20,\r\n    borderBottomLeftRadius: 20,\r\n    position: \"absolute\",\r\n    top: 0,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}