{"ast":null,"code":"import { useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nvar StatusBarManager = function StatusBarManager(_ref) {\n  var presentationStyle = _ref.presentationStyle;\n  if (Platform.OS === \"ios\" || presentationStyle !== \"overFullScreen\") {\n    return null;\n  }\n  StatusBar.setHidden(true);\n  useEffect(function () {\n    return function () {\n      return StatusBar.setHidden(false);\n    };\n  }, []);\n  return null;\n};\nexport default StatusBarManager;","map":{"version":3,"names":["useEffect","Platform","StatusBar","StatusBarManager","_ref","presentationStyle","OS","setHidden"],"sources":["D:/COURSES/React Native/App-hanh-chinh-development/node_modules/react-native-image-viewing/dist/components/StatusBarManager.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Platform, StatusBar, } from \"react-native\";\nconst StatusBarManager = ({ presentationStyle, }) => {\n    if (Platform.OS === \"ios\" || presentationStyle !== \"overFullScreen\") {\n        return null;\n    }\n    //Can't get an actual state of app status bar with default RN. Gonna rely on \"presentationStyle === overFullScreen\" prop and guess application status bar state to be visible in this case.\n    StatusBar.setHidden(true);\n    useEffect(() => {\n        return () => StatusBar.setHidden(false);\n    }, []);\n    return null;\n};\nexport default StatusBarManager;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAElC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAA+B;EAAA,IAAzBC,iBAAiB,GAAAD,IAAA,CAAjBC,iBAAiB;EACzC,IAAIJ,QAAQ,CAACK,EAAE,KAAK,KAAK,IAAID,iBAAiB,KAAK,gBAAgB,EAAE;IACjE,OAAO,IAAI;EACf;EAEAH,SAAS,CAACK,SAAS,CAAC,IAAI,CAAC;EACzBP,SAAS,CAAC,YAAM;IACZ,OAAO;MAAA,OAAME,SAAS,CAACK,SAAS,CAAC,KAAK,CAAC;IAAA;EAC3C,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,IAAI;AACf,CAAC;AACD,eAAeJ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}