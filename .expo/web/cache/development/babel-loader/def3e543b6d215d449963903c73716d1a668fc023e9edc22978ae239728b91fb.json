{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport React, { useState, useEffect } from \"react\";\nimport { Feather, FontAwesome, AntDesign, MaterialIcons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { GoogleSignin, GoogleSigninButton, statusCodes } from \"@react-native-google-signin/google-signin\";\nvar randomColor = require(\"randomcolor\");\nimport { CommonActions } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ListFloorScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    accessToken = _route$params.accessToken,\n    userID = _route$params.userID,\n    idBuild = _route$params.idBuild;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    build = _useState2[0],\n    setBuild = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    rooms = _useState4[0],\n    setRooms = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    roomsF = _useState6[0],\n    setRoomsF = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    roomsP = _useState8[0],\n    setRoomsP = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    roomsT = _useState10[0],\n    setRoomsT = _useState10[1];\n  useEffect(function () {\n    fetch(`https://ndl-be-apphanhchinh.onrender.com/building/${idBuild}`, {\n      headers: {\n        access_token: accessToken\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setBuild(data);\n    });\n  }, []);\n  useEffect(function () {\n    fetch(\"https://ndl-be-apphanhchinh.onrender.com/room\", {\n      headers: {\n        access_token: accessToken\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setRooms(data);\n    });\n  }, []);\n  var renderFloorList = function renderFloorList() {\n    if (build.floor.length > 0) {\n      return build.floor.map(function (item, index) {\n        var color = randomColor();\n        return _jsxs(Pressable, {\n          onPress: function onPress() {\n            return navigation.navigate(\"ListRoomScreen\", {\n              key: `${String(build.name).slice(-1)}${item}`,\n              floor: `Tầng ${item}`\n            });\n          },\n          style: {\n            backgroundColor: `${color}40`,\n            width: \"32%\",\n            height: 100,\n            marginTop: 10,\n            marginBottom: 10,\n            padding: 10,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            borderRadius: 10\n          },\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"hospital-building\",\n            size: 24,\n            color: color\n          }), _jsxs(Text, {\n            style: {\n              fontWeight: 500,\n              fontSize: 16,\n              opacity: 1\n            },\n            children: [\"T\\u1EA7ng \", item]\n          }), _jsxs(Text, {\n            style: {\n              fontWeight: 400,\n              fontSize: 14\n            },\n            children: [renderListRoom(item), \" Ph\\xF2ng\"]\n          })]\n        }, index);\n      });\n    } else {\n      return _jsx(View, {\n        children: _jsx(Text, {\n          children: \"D\\u1EEF li\\u1EC7u \\u0111ang c\\u1EADp nh\\u1EADt\"\n        })\n      });\n    }\n  };\n  var renderListRoom = function renderListRoom(data) {\n    return rooms.filter(function (item, index) {\n      return item.name.indexOf(`${String(build.name).slice(-1)}${data}`) != -1;\n    }).length;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(MaterialIcons, {\n        onPress: function onPress() {\n          return navigation.dispatch(CommonActions.goBack());\n        },\n        name: \"keyboard-arrow-left\",\n        size: 24,\n        color: \"black\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 600\n        },\n        children: build != null ? build.name : \"\"\n      }), _jsx(Feather, {\n        name: \"bell\",\n        size: 24,\n        color: \"black\"\n      })]\n    }), _jsx(View, {\n      style: styles.body,\n      children: build != null && rooms.length > 0 ? renderFloorList() : null\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#ffffff\",\n    paddingTop: 40,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingBottom: 20\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  body: {\n    marginTop: 20,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flex-start\",\n    columnGap: 5,\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Feather","FontAwesome","AntDesign","MaterialIcons","MaterialCommunityIcons","GoogleSignin","GoogleSigninButton","statusCodes","randomColor","require","CommonActions","jsx","_jsx","jsxs","_jsxs","ListFloorScreen","_ref","route","navigation","_route$params","params","accessToken","userID","idBuild","_useState","_useState2","_slicedToArray","build","setBuild","_useState3","_useState4","rooms","setRooms","_useState5","_useState6","roomsF","setRoomsF","_useState7","_useState8","roomsP","setRoomsP","_useState9","_useState10","roomsT","setRoomsT","fetch","headers","access_token","then","res","json","data","renderFloorList","floor","length","map","item","index","color","Pressable","onPress","navigate","key","String","name","slice","style","backgroundColor","width","height","marginTop","marginBottom","padding","display","justifyContent","borderRadius","children","size","Text","fontWeight","fontSize","opacity","renderListRoom","View","filter","indexOf","styles","container","header","dispatch","goBack","body","StyleSheet","create","paddingTop","paddingLeft","paddingRight","paddingBottom","flexDirection","alignItems","flexWrap","columnGap","flex"],"sources":["D:/COURSES/React Native/App-hanh-chinh-development/src/Components/Home/Screens/HomeScreens/ListBuild/ListFloorScreen.js"],"sourcesContent":["import {\r\n  Dimensions,\r\n  Text,\r\n  View,\r\n  Pressable,\r\n  Image,\r\n  StyleSheet,\r\n  FlatList,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Feather,\r\n  FontAwesome,\r\n  AntDesign,\r\n  MaterialIcons,\r\n  MaterialCommunityIcons,\r\n} from \"@expo/vector-icons\";\r\nimport {\r\n  GoogleSignin,\r\n  GoogleSigninButton,\r\n  statusCodes,\r\n} from \"@react-native-google-signin/google-signin\";\r\nvar randomColor = require(\"randomcolor\");\r\nimport { CommonActions } from \"@react-navigation/native\";\r\n\r\nexport default function ListFloorScreen({ route, navigation }) {\r\n  const { accessToken, userID, idBuild } = route.params;\r\n  const [build, setBuild] = useState();\r\n  const [rooms, setRooms] = useState([]);\r\n  const [roomsF, setRoomsF] = useState([]);\r\n  const [roomsP, setRoomsP] = useState([]);\r\n  const [roomsT, setRoomsT] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://ndl-be-apphanhchinh.onrender.com/building/${idBuild}`, {\r\n      headers: {\r\n        access_token: accessToken,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setBuild(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://ndl-be-apphanhchinh.onrender.com/room\", {\r\n      headers: {\r\n        access_token: accessToken,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setRooms(data);\r\n      });\r\n  }, []);\r\n\r\n  const renderFloorList = () => {\r\n    if (build.floor.length > 0) {\r\n      return build.floor.map((item, index) => {\r\n        const color = randomColor();\r\n        return (\r\n          <Pressable\r\n            onPress={() =>\r\n              navigation.navigate(\"ListRoomScreen\", {\r\n                key: `${String(build.name).slice(-1)}${item}`,\r\n                floor: `Tầng ${item}`,\r\n              })\r\n            }\r\n            key={index}\r\n            style={{\r\n              backgroundColor: `${color}40`,\r\n              width: \"32%\",\r\n              height: 100,\r\n              marginTop: 10,\r\n              marginBottom: 10,\r\n              padding: 10,\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <MaterialCommunityIcons\r\n              name=\"hospital-building\"\r\n              size={24}\r\n              color={color}\r\n            />\r\n            <Text style={{ fontWeight: 500, fontSize: 16, opacity: 1 }}>\r\n              Tầng {item}\r\n            </Text>\r\n            <Text style={{ fontWeight: 400, fontSize: 14 }}>\r\n              {renderListRoom(item)} Phòng\r\n            </Text>\r\n          </Pressable>\r\n        );\r\n      });\r\n    } else {\r\n      return (\r\n        <View>\r\n          <Text>Dữ liệu đang cập nhật</Text>\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderListRoom = (data) => {\r\n    return rooms.filter((item, index) => {\r\n      return item.name.indexOf(`${String(build.name).slice(-1)}${data}`) != -1;\r\n    }).length;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <MaterialIcons\r\n          onPress={() => navigation.dispatch(CommonActions.goBack())}\r\n          name=\"keyboard-arrow-left\"\r\n          size={24}\r\n          color=\"black\"\r\n        />\r\n        <Text style={{ fontSize: 16, fontWeight: 600 }}>\r\n          {build != null ? build.name : \"\"}\r\n        </Text>\r\n        <Feather name=\"bell\" size={24} color=\"black\" />\r\n      </View>\r\n      <View style={styles.body}>\r\n        {build != null && rooms.length > 0 ? renderFloorList() : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#ffffff\",\r\n    paddingTop: 40,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  body: {\r\n    marginTop: 20,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    // backgroundColor: \"red\",\r\n    justifyContent: \"flex-start\",\r\n    columnGap: 5,\r\n    flex: 1,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}