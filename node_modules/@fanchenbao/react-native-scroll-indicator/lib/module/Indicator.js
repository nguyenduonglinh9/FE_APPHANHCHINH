/* eslint-disable react-native/no-inline-styles */
/**
 * @format
 */
import * as React from 'react';
import { Animated } from 'react-native';
export const Indicator = props => {
  const {
    d,
    sc,
    horizontal,
    indSize,
    diff,
    inverted,
    locStyle,
    indStyle
  } = props;

  // interpolate the distance need to travel by the indicator to translateX or
  // translateY. Note that the max travel distance is diff
  const move = d.interpolate({
    inputRange: [0, diff],
    outputRange: inverted ? [diff, 0] : [0, diff],
    extrapolate: 'extend'
  });
  // interpolate the scale need to shrink by the indicator to scaleX or scaleY.
  // Note that the range of shrink scale is from 0 (completely shrunk,
  // invisible) to 1 (no shrink)
  const shrink = sc.interpolate({
    inputRange: [0, 1],
    outputRange: [0, 1],
    extrapolate: 'clamp'
  });
  return /*#__PURE__*/React.createElement(Animated.View, {
    style: {
      ...indStyle,
      ...locStyle,
      position: 'absolute',
      height: horizontal ? indStyle.width : indSize,
      width: horizontal ? indSize : indStyle.width,
      transform: horizontal ? [{
        translateX: move
      }, {
        scaleX: shrink
      }] : [{
        translateY: move
      }, {
        scaleY: shrink
      }]
    }
  });
};
//# sourceMappingURL=Indicator.js.map